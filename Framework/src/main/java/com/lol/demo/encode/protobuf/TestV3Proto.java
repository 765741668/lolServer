// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sources_proto/testV3.proto

package com.lol.demo.encode.protobuf;

public final class TestV3Proto {
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_netty_TestV3_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_netty_TestV3_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_netty_TestV3_EnummapEntry_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_netty_TestV3_EnummapEntry_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_netty_TestV3Array_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_netty_TestV3Array_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_netty_TestV3Array_ObjmmapEntry_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_netty_TestV3Array_ObjmmapEntry_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\032sources_proto/testV3.proto\022\005netty\"\343\002\n\006" +
                        "TestV3\022\014\n\004name\030\001 \001(\t\022&\n\010hilarity\030\002 \001(\0162\024" +
                        ".env.netty.TestV3.Humour\022\024\n\014height_in_cm\030\003 \001" +
                        "(\r\022\014\n\004data\030\004 \001(\014\022\017\n\003key\030\005 \003(\004B\002\020\001\022+\n\007enu" +
                        "mmap\030\006 \003(\0132\032.env.netty.TestV3.EnummapEntry\022\024" +
                        "\n\014result_count\030\007 \001(\003\022\025\n\rtrue_scotsman\030\010 " +
                        "\001(\010\022\r\n\005score\030\t \001(\002\032D\n\014EnummapEntry\022\013\n\003ke" +
                        "y\030\001 \001(\t\022#\n\005value\030\002 \001(\0162\024.env.netty.TestV3.Hu" +
                        "mour:\0028\001\"?\n\006Humour\022\013\n\007UNKNOWN\020\000\022\010\n\004PUNS\020" +
                        "\001\022\r\n\tSLAPSTICK\020\002\022\017\n\013BILL_BAILEY\020!\"\237\001\n\013Te",
                "stV3Array\0220\n\007objmmap\030\002 \003(\0132\037.env.netty.TestV" +
                        "3Array.ObjmmapEntry\022\037\n\010enumlist\030\003 \003(\0132\r." +
                        "env.netty.TestV3\032=\n\014ObjmmapEntry\022\013\n\003key\030\001 \001(" +
                        "\t\022\034\n\005value\030\002 \001(\0132\r.env.netty.TestV3:\0028\001B,\n\035c" +
                        "om.yzh.env.netty.encode.protobufB\013TestV3Prot" +
                        "ob\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner
                );
        internal_static_netty_TestV3_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_netty_TestV3_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_TestV3_descriptor,
                new String[]{"Name", "Hilarity", "HeightInCm", "Data", "Key", "Enummap", "ResultCount", "TrueScotsman", "Score",});
        internal_static_netty_TestV3_EnummapEntry_descriptor =
                internal_static_netty_TestV3_descriptor.getNestedTypes().get(0);
        internal_static_netty_TestV3_EnummapEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_TestV3_EnummapEntry_descriptor,
                new String[]{"Key", "Value",});
        internal_static_netty_TestV3Array_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_netty_TestV3Array_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_TestV3Array_descriptor,
                new String[]{"Objmmap", "Enumlist",});
        internal_static_netty_TestV3Array_ObjmmapEntry_descriptor =
                internal_static_netty_TestV3Array_descriptor.getNestedTypes().get(0);
        internal_static_netty_TestV3Array_ObjmmapEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_TestV3Array_ObjmmapEntry_descriptor,
                new String[]{"Key", "Value",});
    }

    private TestV3Proto() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    public interface TestV3OrBuilder extends
            // @@protoc_insertion_point(interface_extends:env.netty.TestV3)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string name = 1;</code>
         */
        String getName();

        /**
         * <code>optional string name = 1;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
         */
        int getHilarityValue();

        /**
         * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
         */
        TestV3.Humour getHilarity();

        /**
         * <code>optional uint32 height_in_cm = 3;</code>
         */
        int getHeightInCm();

        /**
         * <code>optional bytes data = 4;</code>
         */
        com.google.protobuf.ByteString getData();

        /**
         * <code>repeated uint64 key = 5 [packed = true];</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * 带有[packed=true]选项的可重复项（type为2）
         * </pre>
         */
        java.util.List<Long> getKeyList();

        /**
         * <code>repeated uint64 key = 5 [packed = true];</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * 带有[packed=true]选项的可重复项（type为2）
         * </pre>
         */
        int getKeyCount();

        /**
         * <code>repeated uint64 key = 5 [packed = true];</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * 带有[packed=true]选项的可重复项（type为2）
         * </pre>
         */
        long getKey(int index);

        /**
         * <code>map&lt;string, .env.netty.TestV3.Humour&gt; enummap = 6;</code>
         * <p>
         * <pre>
         * 定义map
         * </pre>
         */
        java.util.Map<String, TestV3.Humour>
        getEnummap();

        /**
         * <code>map&lt;string, .env.netty.TestV3.Humour&gt; enummap = 6;</code>
         * <p>
         * <pre>
         * 定义map
         * </pre>
         */
        java.util.Map<String, Integer>
        getEnummapValue();

        /**
         * <code>optional int64 result_count = 7;</code>
         */
        long getResultCount();

        /**
         * <code>optional bool true_scotsman = 8;</code>
         */
        boolean getTrueScotsman();

        /**
         * <code>optional float score = 9;</code>
         */
        float getScore();
    }

    public interface TestV3ArrayOrBuilder extends
            // @@protoc_insertion_point(interface_extends:env.netty.TestV3Array)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>map&lt;string, .env.netty.TestV3&gt; objmmap = 2;</code>
         * <p>
         * <pre>
         * Parent any_field = 1;
         * 定义map
         * </pre>
         */
        java.util.Map<String, TestV3>
        getObjmmap();

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        java.util.List<TestV3>
        getEnumlistList();

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        TestV3 getEnumlist(int index);

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        int getEnumlistCount();

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        java.util.List<? extends TestV3OrBuilder>
        getEnumlistOrBuilderList();

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        TestV3OrBuilder getEnumlistOrBuilder(
                int index);
    }

    /**
     * Protobuf type {@code env.netty.TestV3}
     */
    public static final class TestV3 extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:env.netty.TestV3)
            TestV3OrBuilder {
        public static final int NAME_FIELD_NUMBER = 1;
        public static final int HILARITY_FIELD_NUMBER = 2;
        public static final int HEIGHT_IN_CM_FIELD_NUMBER = 3;
        public static final int DATA_FIELD_NUMBER = 4;
        public static final int KEY_FIELD_NUMBER = 5;
        public static final int ENUMMAP_FIELD_NUMBER = 6;
        public static final int RESULT_COUNT_FIELD_NUMBER = 7;
        public static final int TRUE_SCOTSMAN_FIELD_NUMBER = 8;
        public static final int SCORE_FIELD_NUMBER = 9;
        public static final com.google.protobuf.Parser<TestV3> PARSER =
                new com.google.protobuf.AbstractParser<TestV3>() {
                    public TestV3 parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        try {
                            return new TestV3(input, extensionRegistry);
                        } catch (RuntimeException e) {
                            if (e.getCause() instanceof
                                    com.google.protobuf.InvalidProtocolBufferException) {
                                throw (com.google.protobuf.InvalidProtocolBufferException)
                                        e.getCause();
                            }
                            throw e;
                        }
                    }
                };
        private static final
        com.google.protobuf.Internal.MapAdapter.Converter<
                Integer, Humour> enummapValueConverter =
                com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                        Humour.internalGetValueMap(),
                        Humour.UNRECOGNIZED);
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:env.netty.TestV3)
        private static final TestV3 DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new TestV3();
        }

        private int bitField0_;
        private volatile Object name_;
        private int hilarity_;
        private int heightInCm_;
        private com.google.protobuf.ByteString data_;
        private java.util.List<Long> key_;
        private int keyMemoizedSerializedSize = -1;
        private com.google.protobuf.MapField<
                String, Integer> enummap_;
        private long resultCount_;
        private boolean trueScotsman_;
        private float score_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use TestV3.newBuilder() to construct.
        private TestV3(com.google.protobuf.GeneratedMessage.Builder builder) {
            super(builder);
        }

        private TestV3() {
            name_ = "";
            hilarity_ = 0;
            heightInCm_ = 0;
            data_ = com.google.protobuf.ByteString.EMPTY;
            key_ = java.util.Collections.emptyList();
            resultCount_ = 0L;
            trueScotsman_ = false;
            score_ = 0F;
        }

        private TestV3(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();

                            name_ = bs;
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            hilarity_ = rawValue;
                            break;
                        }
                        case 24: {

                            heightInCm_ = input.readUInt32();
                            break;
                        }
                        case 34: {

                            data_ = input.readBytes();
                            break;
                        }
                        case 40: {
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                key_ = new java.util.ArrayList<Long>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            key_.add(input.readUInt64());
                            break;
                        }
                        case 42: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                                key_ = new java.util.ArrayList<Long>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                key_.add(input.readUInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 50: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                enummap_ = com.google.protobuf.MapField.newMapField(
                                        EnummapDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000020;
                            }
                            com.google.protobuf.MapEntry<String, Integer>
                                    enummap = input.readMessage(
                                    EnummapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            enummap_.getMutableMap().put(enummap.getKey(), enummap.getValue());
                            break;
                        }
                        case 56: {

                            resultCount_ = input.readInt64();
                            break;
                        }
                        case 64: {

                            trueScotsman_ = input.readBool();
                            break;
                        }
                        case 77: {

                            score_ = input.readFloat();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
                throw new RuntimeException(
                        new com.google.protobuf.InvalidProtocolBufferException(
                                e.getMessage()).setUnfinishedMessage(this)
                );
            } finally {
                if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    key_ = java.util.Collections.unmodifiableList(key_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return TestV3Proto.internal_static_netty_TestV3_descriptor;
        }

        public static TestV3 parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TestV3 parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TestV3 parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TestV3 parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TestV3 parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static TestV3 parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static TestV3 parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static TestV3 parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static TestV3 parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static TestV3 parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(TestV3 prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static TestV3 getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
                int number) {
            switch (number) {
                case 6:
                    return internalGetEnummap();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return TestV3Proto.internal_static_netty_TestV3_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            TestV3.class, Builder.class);
        }

        /**
         * <code>optional string name = 1;</code>
         */
        public String getName() {
            Object ref = name_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    name_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            Object ref = name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
         */
        public int getHilarityValue() {
            return hilarity_;
        }

        /**
         * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
         */
        public Humour getHilarity() {
            Humour result = Humour.valueOf(hilarity_);
            return result == null ? Humour.UNRECOGNIZED : result;
        }

        /**
         * <code>optional uint32 height_in_cm = 3;</code>
         */
        public int getHeightInCm() {
            return heightInCm_;
        }

        /**
         * <code>optional bytes data = 4;</code>
         */
        public com.google.protobuf.ByteString getData() {
            return data_;
        }

        /**
         * <code>repeated uint64 key = 5 [packed = true];</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * 带有[packed=true]选项的可重复项（type为2）
         * </pre>
         */
        public java.util.List<Long>
        getKeyList() {
            return key_;
        }

        /**
         * <code>repeated uint64 key = 5 [packed = true];</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * 带有[packed=true]选项的可重复项（type为2）
         * </pre>
         */
        public int getKeyCount() {
            return key_.size();
        }

        /**
         * <code>repeated uint64 key = 5 [packed = true];</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * 带有[packed=true]选项的可重复项（type为2）
         * </pre>
         */
        public long getKey(int index) {
            return key_.get(index);
        }

        private com.google.protobuf.MapField<String, Integer>
        internalGetEnummap() {
            if (enummap_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        EnummapDefaultEntryHolder.defaultEntry);
            }
            return enummap_;
        }

        /**
         * <code>map&lt;string, .env.netty.TestV3.Humour&gt; enummap = 6;</code>
         * <p>
         * <pre>
         * 定义map
         * </pre>
         */

        public java.util.Map<String, Integer>
        getEnummapValue() {
            return internalGetEnummap().getMap();
        }

        /**
         * <code>map&lt;string, .env.netty.TestV3.Humour&gt; enummap = 6;</code>
         * <p>
         * <pre>
         * 定义map
         * </pre>
         */

        public java.util.Map<String, Humour>
        getEnummap() {
            return new com.google.protobuf.Internal.MapAdapter<
                    String, Humour, Integer>(
                    internalGetEnummap().getMap(),
                    enummapValueConverter);
        }

        /**
         * <code>optional int64 result_count = 7;</code>
         */
        public long getResultCount() {
            return resultCount_;
        }

        /**
         * <code>optional bool true_scotsman = 8;</code>
         */
        public boolean getTrueScotsman() {
            return trueScotsman_;
        }

        /**
         * <code>optional float score = 9;</code>
         */
        public float getScore() {
            return score_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (!getNameBytes().isEmpty()) {
                output.writeBytes(1, getNameBytes());
            }
            if (hilarity_ != Humour.UNKNOWN.getNumber()) {
                output.writeEnum(2, hilarity_);
            }
            if (heightInCm_ != 0) {
                output.writeUInt32(3, heightInCm_);
            }
            if (!data_.isEmpty()) {
                output.writeBytes(4, data_);
            }
            if (getKeyList().size() > 0) {
                output.writeRawVarint32(42);
                output.writeRawVarint32(keyMemoizedSerializedSize);
            }
            for (int i = 0; i < key_.size(); i++) {
                output.writeUInt64NoTag(key_.get(i));
            }
            for (java.util.Map.Entry<String, Integer> entry
                    : internalGetEnummap().getMap().entrySet()) {
                com.google.protobuf.MapEntry<String, Integer>
                        enummap = EnummapDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                output.writeMessage(6, enummap);
            }
            if (resultCount_ != 0L) {
                output.writeInt64(7, resultCount_);
            }
            if (trueScotsman_ != false) {
                output.writeBool(8, trueScotsman_);
            }
            if (score_ != 0F) {
                output.writeFloat(9, score_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (!getNameBytes().isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getNameBytes());
            }
            if (hilarity_ != Humour.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, hilarity_);
            }
            if (heightInCm_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, heightInCm_);
            }
            if (!data_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, data_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < key_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt64SizeNoTag(key_.get(i));
                }
                size += dataSize;
                if (!getKeyList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                keyMemoizedSerializedSize = dataSize;
            }
            for (java.util.Map.Entry<String, Integer> entry
                    : internalGetEnummap().getMap().entrySet()) {
                com.google.protobuf.MapEntry<String, Integer>
                        enummap = EnummapDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, enummap);
            }
            if (resultCount_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(7, resultCount_);
            }
            if (trueScotsman_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(8, trueScotsman_);
            }
            if (score_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(9, score_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<TestV3> getParserForType() {
            return PARSER;
        }

        public TestV3 getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf enum {@code env.netty.TestV3.Humour}
         */
        public enum Humour
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>UNKNOWN = 0;</code>
             */
            UNKNOWN(0, 0),
            /**
             * <code>PUNS = 1;</code>
             */
            PUNS(1, 1),
            /**
             * <code>SLAPSTICK = 2;</code>
             */
            SLAPSTICK(2, 2),
            /**
             * <code>BILL_BAILEY = 33;</code>
             */
            BILL_BAILEY(3, 33),
            UNRECOGNIZED(-1, -1),;

            /**
             * <code>UNKNOWN = 0;</code>
             */
            public static final int UNKNOWN_VALUE = 0;
            /**
             * <code>PUNS = 1;</code>
             */
            public static final int PUNS_VALUE = 1;
            /**
             * <code>SLAPSTICK = 2;</code>
             */
            public static final int SLAPSTICK_VALUE = 2;
            /**
             * <code>BILL_BAILEY = 33;</code>
             */
            public static final int BILL_BAILEY_VALUE = 33;
            private static final Humour[] VALUES = values();
            private static com.google.protobuf.Internal.EnumLiteMap<Humour>
                    internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Humour>() {
                        public Humour findValueByNumber(int number) {
                            return Humour.valueOf(number);
                        }
                    };
            private final int index;
            private final int value;

            private Humour(int index, int value) {
                this.index = index;
                this.value = value;
            }

            public static Humour valueOf(int value) {
                switch (value) {
                    case 0:
                        return UNKNOWN;
                    case 1:
                        return PUNS;
                    case 2:
                        return SLAPSTICK;
                    case 33:
                        return BILL_BAILEY;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Humour>
            internalGetValueMap() {
                return internalValueMap;
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return TestV3.getDescriptor().getEnumTypes().get(0);
            }

            public static Humour valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            public final int getNumber() {
                if (index == -1) {
                    throw new IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(index);
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            // @@protoc_insertion_point(enum_scope:env.netty.TestV3.Humour)
        }

        private static final class EnummapDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<
                    String, Integer> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<String, Integer>newDefaultInstance(
                                    TestV3Proto.internal_static_netty_TestV3_EnummapEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.ENUM,
                                    Humour.UNKNOWN.getNumber());
        }

        /**
         * Protobuf type {@code env.netty.TestV3}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:env.netty.TestV3)
                TestV3OrBuilder {
            private int bitField0_;
            private Object name_ = "";
            private int hilarity_ = 0;
            private int heightInCm_;
            private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
            private java.util.List<Long> key_ = java.util.Collections.emptyList();
            private com.google.protobuf.MapField<
                    String, Integer> enummap_;
            private long resultCount_;
            private boolean trueScotsman_;
            private float score_;

            // Construct using com.lol.demo.encode.protobuf.TestV3Proto.TestV3.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return TestV3Proto.internal_static_netty_TestV3_descriptor;
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMapField(
                    int number) {
                switch (number) {
                    case 6:
                        return internalGetEnummap();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMutableMapField(
                    int number) {
                switch (number) {
                    case 6:
                        return internalGetMutableEnummap();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return TestV3Proto.internal_static_netty_TestV3_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                TestV3.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                name_ = "";

                hilarity_ = 0;

                heightInCm_ = 0;

                data_ = com.google.protobuf.ByteString.EMPTY;

                key_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000010);
                internalGetMutableEnummap().clear();
                resultCount_ = 0L;

                trueScotsman_ = false;

                score_ = 0F;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return TestV3Proto.internal_static_netty_TestV3_descriptor;
            }

            public TestV3 getDefaultInstanceForType() {
                return TestV3.getDefaultInstance();
            }

            public TestV3 build() {
                TestV3 result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public TestV3 buildPartial() {
                TestV3 result = new TestV3(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.name_ = name_;
                result.hilarity_ = hilarity_;
                result.heightInCm_ = heightInCm_;
                result.data_ = data_;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    key_ = java.util.Collections.unmodifiableList(key_);
                    bitField0_ = (bitField0_ & ~0x00000010);
                }
                result.key_ = key_;
                result.enummap_ = internalGetEnummap();
                result.enummap_.makeImmutable();
                result.resultCount_ = resultCount_;
                result.trueScotsman_ = trueScotsman_;
                result.score_ = score_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof TestV3) {
                    return mergeFrom((TestV3) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(TestV3 other) {
                if (other == TestV3.getDefaultInstance()) return this;
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    onChanged();
                }
                if (other.hilarity_ != 0) {
                    setHilarityValue(other.getHilarityValue());
                }
                if (other.getHeightInCm() != 0) {
                    setHeightInCm(other.getHeightInCm());
                }
                if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
                    setData(other.getData());
                }
                if (!other.key_.isEmpty()) {
                    if (key_.isEmpty()) {
                        key_ = other.key_;
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        ensureKeyIsMutable();
                        key_.addAll(other.key_);
                    }
                    onChanged();
                }
                internalGetMutableEnummap().mergeFrom(
                        other.internalGetEnummap());
                if (other.getResultCount() != 0L) {
                    setResultCount(other.getResultCount());
                }
                if (other.getTrueScotsman() != false) {
                    setTrueScotsman(other.getTrueScotsman());
                }
                if (other.getScore() != 0F) {
                    setScore(other.getScore());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                TestV3 parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (TestV3) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public String getName() {
                Object ref = name_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        name_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder setName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
             */
            public int getHilarityValue() {
                return hilarity_;
            }

            /**
             * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
             */
            public Builder setHilarityValue(int value) {
                hilarity_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
             */
            public Humour getHilarity() {
                Humour result = Humour.valueOf(hilarity_);
                return result == null ? Humour.UNRECOGNIZED : result;
            }

            /**
             * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
             */
            public Builder setHilarity(Humour value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                hilarity_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>optional .env.netty.TestV3.Humour hilarity = 2;</code>
             */
            public Builder clearHilarity() {

                hilarity_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 height_in_cm = 3;</code>
             */
            public int getHeightInCm() {
                return heightInCm_;
            }

            /**
             * <code>optional uint32 height_in_cm = 3;</code>
             */
            public Builder setHeightInCm(int value) {

                heightInCm_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 height_in_cm = 3;</code>
             */
            public Builder clearHeightInCm() {

                heightInCm_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>optional bytes data = 4;</code>
             */
            public com.google.protobuf.ByteString getData() {
                return data_;
            }

            /**
             * <code>optional bytes data = 4;</code>
             */
            public Builder setData(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                data_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional bytes data = 4;</code>
             */
            public Builder clearData() {

                data_ = getDefaultInstance().getData();
                onChanged();
                return this;
            }

            private void ensureKeyIsMutable() {
                if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                    key_ = new java.util.ArrayList<Long>(key_);
                    bitField0_ |= 0x00000010;
                }
            }

            /**
             * <code>repeated uint64 key = 5 [packed = true];</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * 带有[packed=true]选项的可重复项（type为2）
             * </pre>
             */
            public java.util.List<Long>
            getKeyList() {
                return java.util.Collections.unmodifiableList(key_);
            }

            /**
             * <code>repeated uint64 key = 5 [packed = true];</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * 带有[packed=true]选项的可重复项（type为2）
             * </pre>
             */
            public int getKeyCount() {
                return key_.size();
            }

            /**
             * <code>repeated uint64 key = 5 [packed = true];</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * 带有[packed=true]选项的可重复项（type为2）
             * </pre>
             */
            public long getKey(int index) {
                return key_.get(index);
            }

            /**
             * <code>repeated uint64 key = 5 [packed = true];</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * 带有[packed=true]选项的可重复项（type为2）
             * </pre>
             */
            public Builder setKey(
                    int index, long value) {
                ensureKeyIsMutable();
                key_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated uint64 key = 5 [packed = true];</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * 带有[packed=true]选项的可重复项（type为2）
             * </pre>
             */
            public Builder addKey(long value) {
                ensureKeyIsMutable();
                key_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated uint64 key = 5 [packed = true];</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * 带有[packed=true]选项的可重复项（type为2）
             * </pre>
             */
            public Builder addAllKey(
                    Iterable<? extends Long> values) {
                ensureKeyIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, key_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated uint64 key = 5 [packed = true];</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * 带有[packed=true]选项的可重复项（type为2）
             * </pre>
             */
            public Builder clearKey() {
                key_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            private com.google.protobuf.MapField<String, Integer>
            internalGetEnummap() {
                if (enummap_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            EnummapDefaultEntryHolder.defaultEntry);
                }
                return enummap_;
            }

            private com.google.protobuf.MapField<String, Integer>
            internalGetMutableEnummap() {
                onChanged();
                ;
                if (enummap_ == null) {
                    enummap_ = com.google.protobuf.MapField.newMapField(
                            EnummapDefaultEntryHolder.defaultEntry);
                }
                if (!enummap_.isMutable()) {
                    enummap_ = enummap_.copy();
                }
                return enummap_;
            }

            /**
             * <code>map&lt;string, .env.netty.TestV3.Humour&gt; enummap = 6;</code>
             * <p>
             * <pre>
             * 定义map
             * </pre>
             */

            public java.util.Map<String, Humour>
            getEnummap() {
                return new com.google.protobuf.Internal.MapAdapter<
                        String, Humour, Integer>(
                        internalGetEnummap().getMap(),
                        enummapValueConverter);
            }

            /**
             * <code>map&lt;string, .env.netty.TestV3.Humour&gt; enummap = 6;</code>
             * <p>
             * <pre>
             * 定义map
             * </pre>
             */

            public java.util.Map<String, Humour>
            getMutableEnummap() {
                return new com.google.protobuf.Internal.MapAdapter<
                        String, Humour, Integer>(
                        internalGetMutableEnummap().getMutableMap(),
                        enummapValueConverter);
            }

            /**
             * <code>map&lt;string, .env.netty.TestV3.Humour&gt; enummap = 6;</code>
             * <p>
             * <pre>
             * 定义map
             * </pre>
             */

            public java.util.Map<String, Integer>
            getEnummapValue() {
                return internalGetEnummap().getMap();
            }

            /**
             * <code>map&lt;string, .env.netty.TestV3.Humour&gt; enummap = 6;</code>
             * <p>
             * <pre>
             * 定义map
             * </pre>
             */

            public java.util.Map<String, Integer>
            getMutableEnummapValue() {
                return internalGetMutableEnummap().getMutableMap();
            }

            /**
             * <code>optional int64 result_count = 7;</code>
             */
            public long getResultCount() {
                return resultCount_;
            }

            /**
             * <code>optional int64 result_count = 7;</code>
             */
            public Builder setResultCount(long value) {

                resultCount_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional int64 result_count = 7;</code>
             */
            public Builder clearResultCount() {

                resultCount_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>optional bool true_scotsman = 8;</code>
             */
            public boolean getTrueScotsman() {
                return trueScotsman_;
            }

            /**
             * <code>optional bool true_scotsman = 8;</code>
             */
            public Builder setTrueScotsman(boolean value) {

                trueScotsman_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional bool true_scotsman = 8;</code>
             */
            public Builder clearTrueScotsman() {

                trueScotsman_ = false;
                onChanged();
                return this;
            }

            /**
             * <code>optional float score = 9;</code>
             */
            public float getScore() {
                return score_;
            }

            /**
             * <code>optional float score = 9;</code>
             */
            public Builder setScore(float value) {

                score_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional float score = 9;</code>
             */
            public Builder clearScore() {

                score_ = 0F;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:env.netty.TestV3)
        }

    }

    /**
     * Protobuf type {@code env.netty.TestV3Array}
     */
    public static final class TestV3Array extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:env.netty.TestV3Array)
            TestV3ArrayOrBuilder {
        public static final int OBJMMAP_FIELD_NUMBER = 2;
        public static final int ENUMLIST_FIELD_NUMBER = 3;
        public static final com.google.protobuf.Parser<TestV3Array> PARSER =
                new com.google.protobuf.AbstractParser<TestV3Array>() {
                    public TestV3Array parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        try {
                            return new TestV3Array(input, extensionRegistry);
                        } catch (RuntimeException e) {
                            if (e.getCause() instanceof
                                    com.google.protobuf.InvalidProtocolBufferException) {
                                throw (com.google.protobuf.InvalidProtocolBufferException)
                                        e.getCause();
                            }
                            throw e;
                        }
                    }
                };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:env.netty.TestV3Array)
        private static final TestV3Array DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new TestV3Array();
        }

        private com.google.protobuf.MapField<
                String, TestV3> objmmap_;
        private java.util.List<TestV3> enumlist_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use TestV3Array.newBuilder() to construct.
        private TestV3Array(com.google.protobuf.GeneratedMessage.Builder builder) {
            super(builder);
        }

        private TestV3Array() {
            enumlist_ = java.util.Collections.emptyList();
        }

        private TestV3Array(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                objmmap_ = com.google.protobuf.MapField.newMapField(
                                        ObjmmapDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000001;
                            }
                            com.google.protobuf.MapEntry<String, TestV3>
                                    objmmap = input.readMessage(
                                    ObjmmapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            objmmap_.getMutableMap().put(objmmap.getKey(), objmmap.getValue());
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                enumlist_ = new java.util.ArrayList<TestV3>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            enumlist_.add(input.readMessage(TestV3.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
                throw new RuntimeException(
                        new com.google.protobuf.InvalidProtocolBufferException(
                                e.getMessage()).setUnfinishedMessage(this)
                );
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    enumlist_ = java.util.Collections.unmodifiableList(enumlist_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return TestV3Proto.internal_static_netty_TestV3Array_descriptor;
        }

        public static TestV3Array parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TestV3Array parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TestV3Array parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TestV3Array parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TestV3Array parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static TestV3Array parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static TestV3Array parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static TestV3Array parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static TestV3Array parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static TestV3Array parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(TestV3Array prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static TestV3Array getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
                int number) {
            switch (number) {
                case 2:
                    return internalGetObjmmap();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return TestV3Proto.internal_static_netty_TestV3Array_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            TestV3Array.class, Builder.class);
        }

        private com.google.protobuf.MapField<String, TestV3>
        internalGetObjmmap() {
            if (objmmap_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        ObjmmapDefaultEntryHolder.defaultEntry);
            }
            return objmmap_;
        }

        /**
         * <code>map&lt;string, .env.netty.TestV3&gt; objmmap = 2;</code>
         * <p>
         * <pre>
         * Parent any_field = 1;
         * 定义map
         * </pre>
         */

        public java.util.Map<String, TestV3> getObjmmap() {
            return internalGetObjmmap().getMap();
        }

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        public java.util.List<TestV3> getEnumlistList() {
            return enumlist_;
        }

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        public java.util.List<? extends TestV3OrBuilder>
        getEnumlistOrBuilderList() {
            return enumlist_;
        }

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        public int getEnumlistCount() {
            return enumlist_.size();
        }

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        public TestV3 getEnumlist(int index) {
            return enumlist_.get(index);
        }

        /**
         * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
         * <p>
         * <pre>
         * 定义list,list里边item类型为uint64
         * </pre>
         */
        public TestV3OrBuilder getEnumlistOrBuilder(
                int index) {
            return enumlist_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (java.util.Map.Entry<String, TestV3> entry
                    : internalGetObjmmap().getMap().entrySet()) {
                com.google.protobuf.MapEntry<String, TestV3>
                        objmmap = ObjmmapDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                output.writeMessage(2, objmmap);
            }
            for (int i = 0; i < enumlist_.size(); i++) {
                output.writeMessage(3, enumlist_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (java.util.Map.Entry<String, TestV3> entry
                    : internalGetObjmmap().getMap().entrySet()) {
                com.google.protobuf.MapEntry<String, TestV3>
                        objmmap = ObjmmapDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, objmmap);
            }
            for (int i = 0; i < enumlist_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, enumlist_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<TestV3Array> getParserForType() {
            return PARSER;
        }

        public TestV3Array getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        private static final class ObjmmapDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<
                    String, TestV3> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<String, TestV3>newDefaultInstance(
                                    TestV3Proto.internal_static_netty_TestV3Array_ObjmmapEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.MESSAGE,
                                    TestV3.getDefaultInstance());
        }

        /**
         * Protobuf type {@code env.netty.TestV3Array}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:env.netty.TestV3Array)
                TestV3ArrayOrBuilder {
            private int bitField0_;
            private com.google.protobuf.MapField<
                    String, TestV3> objmmap_;
            private java.util.List<TestV3> enumlist_ =
                    java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilder<
                    TestV3, TestV3.Builder, TestV3OrBuilder> enumlistBuilder_;

            // Construct using com.lol.demo.encode.protobuf.TestV3Proto.TestV3Array.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return TestV3Proto.internal_static_netty_TestV3Array_descriptor;
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMapField(
                    int number) {
                switch (number) {
                    case 2:
                        return internalGetObjmmap();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMutableMapField(
                    int number) {
                switch (number) {
                    case 2:
                        return internalGetMutableObjmmap();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return TestV3Proto.internal_static_netty_TestV3Array_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                TestV3Array.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getEnumlistFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                internalGetMutableObjmmap().clear();
                if (enumlistBuilder_ == null) {
                    enumlist_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    enumlistBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return TestV3Proto.internal_static_netty_TestV3Array_descriptor;
            }

            public TestV3Array getDefaultInstanceForType() {
                return TestV3Array.getDefaultInstance();
            }

            public TestV3Array build() {
                TestV3Array result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public TestV3Array buildPartial() {
                TestV3Array result = new TestV3Array(this);
                int from_bitField0_ = bitField0_;
                result.objmmap_ = internalGetObjmmap();
                result.objmmap_.makeImmutable();
                if (enumlistBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        enumlist_ = java.util.Collections.unmodifiableList(enumlist_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.enumlist_ = enumlist_;
                } else {
                    result.enumlist_ = enumlistBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof TestV3Array) {
                    return mergeFrom((TestV3Array) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(TestV3Array other) {
                if (other == TestV3Array.getDefaultInstance()) return this;
                internalGetMutableObjmmap().mergeFrom(
                        other.internalGetObjmmap());
                if (enumlistBuilder_ == null) {
                    if (!other.enumlist_.isEmpty()) {
                        if (enumlist_.isEmpty()) {
                            enumlist_ = other.enumlist_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureEnumlistIsMutable();
                            enumlist_.addAll(other.enumlist_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.enumlist_.isEmpty()) {
                        if (enumlistBuilder_.isEmpty()) {
                            enumlistBuilder_.dispose();
                            enumlistBuilder_ = null;
                            enumlist_ = other.enumlist_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            enumlistBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getEnumlistFieldBuilder() : null;
                        } else {
                            enumlistBuilder_.addAllMessages(other.enumlist_);
                        }
                    }
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                TestV3Array parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (TestV3Array) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.google.protobuf.MapField<String, TestV3>
            internalGetObjmmap() {
                if (objmmap_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            ObjmmapDefaultEntryHolder.defaultEntry);
                }
                return objmmap_;
            }

            private com.google.protobuf.MapField<String, TestV3>
            internalGetMutableObjmmap() {
                onChanged();
                ;
                if (objmmap_ == null) {
                    objmmap_ = com.google.protobuf.MapField.newMapField(
                            ObjmmapDefaultEntryHolder.defaultEntry);
                }
                if (!objmmap_.isMutable()) {
                    objmmap_ = objmmap_.copy();
                }
                return objmmap_;
            }

            /**
             * <code>map&lt;string, .env.netty.TestV3&gt; objmmap = 2;</code>
             * <p>
             * <pre>
             * Parent any_field = 1;
             * 定义map
             * </pre>
             */
            public java.util.Map<String, TestV3> getObjmmap() {
                return internalGetObjmmap().getMap();
            }

            /**
             * <code>map&lt;string, .env.netty.TestV3&gt; objmmap = 2;</code>
             * <p>
             * <pre>
             * Parent any_field = 1;
             * 定义map
             * </pre>
             */
            public java.util.Map<String, TestV3>
            getMutableObjmmap() {
                return internalGetMutableObjmmap().getMutableMap();
            }

            private void ensureEnumlistIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    enumlist_ = new java.util.ArrayList<TestV3>(enumlist_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public java.util.List<TestV3> getEnumlistList() {
                if (enumlistBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(enumlist_);
                } else {
                    return enumlistBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public int getEnumlistCount() {
                if (enumlistBuilder_ == null) {
                    return enumlist_.size();
                } else {
                    return enumlistBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public TestV3 getEnumlist(int index) {
                if (enumlistBuilder_ == null) {
                    return enumlist_.get(index);
                } else {
                    return enumlistBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder setEnumlist(
                    int index, TestV3 value) {
                if (enumlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureEnumlistIsMutable();
                    enumlist_.set(index, value);
                    onChanged();
                } else {
                    enumlistBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder setEnumlist(
                    int index, TestV3.Builder builderForValue) {
                if (enumlistBuilder_ == null) {
                    ensureEnumlistIsMutable();
                    enumlist_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    enumlistBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder addEnumlist(TestV3 value) {
                if (enumlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureEnumlistIsMutable();
                    enumlist_.add(value);
                    onChanged();
                } else {
                    enumlistBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder addEnumlist(
                    int index, TestV3 value) {
                if (enumlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureEnumlistIsMutable();
                    enumlist_.add(index, value);
                    onChanged();
                } else {
                    enumlistBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder addEnumlist(
                    TestV3.Builder builderForValue) {
                if (enumlistBuilder_ == null) {
                    ensureEnumlistIsMutable();
                    enumlist_.add(builderForValue.build());
                    onChanged();
                } else {
                    enumlistBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder addEnumlist(
                    int index, TestV3.Builder builderForValue) {
                if (enumlistBuilder_ == null) {
                    ensureEnumlistIsMutable();
                    enumlist_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    enumlistBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder addAllEnumlist(
                    Iterable<? extends TestV3> values) {
                if (enumlistBuilder_ == null) {
                    ensureEnumlistIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, enumlist_);
                    onChanged();
                } else {
                    enumlistBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder clearEnumlist() {
                if (enumlistBuilder_ == null) {
                    enumlist_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    enumlistBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public Builder removeEnumlist(int index) {
                if (enumlistBuilder_ == null) {
                    ensureEnumlistIsMutable();
                    enumlist_.remove(index);
                    onChanged();
                } else {
                    enumlistBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public TestV3.Builder getEnumlistBuilder(
                    int index) {
                return getEnumlistFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public TestV3OrBuilder getEnumlistOrBuilder(
                    int index) {
                if (enumlistBuilder_ == null) {
                    return enumlist_.get(index);
                } else {
                    return enumlistBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public java.util.List<? extends TestV3OrBuilder>
            getEnumlistOrBuilderList() {
                if (enumlistBuilder_ != null) {
                    return enumlistBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(enumlist_);
                }
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public TestV3.Builder addEnumlistBuilder() {
                return getEnumlistFieldBuilder().addBuilder(
                        TestV3.getDefaultInstance());
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public TestV3.Builder addEnumlistBuilder(
                    int index) {
                return getEnumlistFieldBuilder().addBuilder(
                        index, TestV3.getDefaultInstance());
            }

            /**
             * <code>repeated .env.netty.TestV3 enumlist = 3;</code>
             * <p>
             * <pre>
             * 定义list,list里边item类型为uint64
             * </pre>
             */
            public java.util.List<TestV3.Builder>
            getEnumlistBuilderList() {
                return getEnumlistFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    TestV3, TestV3.Builder, TestV3OrBuilder>
            getEnumlistFieldBuilder() {
                if (enumlistBuilder_ == null) {
                    enumlistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            TestV3, TestV3.Builder, TestV3OrBuilder>(
                            enumlist_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    enumlist_ = null;
                }
                return enumlistBuilder_;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:env.netty.TestV3Array)
        }

    }

    // @@protoc_insertion_point(outer_class_scope)
}
